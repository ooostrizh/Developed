
&НаКлиенте
Процедура ШКАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если Найти(текст,Символы.ПС)>0 И СокрЛП(Текст) <> "" Тогда
		СчитатьШтрихкод(СтрЗаменить(Текст, Символы.ПС, ""));
		ТекущийЭлемент = Элементы.ШК;
		ОбновитьНадписи();
		ШК = "";
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СчитатьШтрихкод(Штрихкод)
	Струк = Новый Структура;
	Струк.Вставить("Штрихкод", Штрихкод);
	НайСтр = Объект.Штрихкоды.НайтиСтроки(Струк);
	Если НайСтр.Количество() <> 0 Тогда
		НайОтпр = НайСтр[0].Отправление;
	Иначе	
		НайОтпр = "";
	КонецеСли;	
	Если НайСтр.Количество() <> 0 Тогда
		//Струк = Новый Структура;
		//Струк.Вставить("Отправление", НайОтпр);
		//НайСтр = Объект.Штрихкоды.НайтиСтроки(Струк);
		//Если НайСтр.Количество() = 0 Тогда
		//	Нов = Объект.Штрихкоды.Добавить();
		//Иначе
			Нов = НайСтр[0];
		//КонецеСли;
		Нов.КоличествоМест = Нов.КоличествоМест + 1;
		Нов.Отправление = НайОтпр;
		Нов.Штрихкод = Штрихкод;
		Нов.ВНаличии = Истина;
		Элементы.шк.ЦветФона = WebЦвета.ЗеленаяЛужайка;
		Сигнал();
	Иначе
		Струк = Новый Структура;
		Струк.Вставить("Штрихкод", Штрихкод);
		НайСтр = Объект.НенайденныеШтрихкоды.НайтиСтроки(Струк);
		Если НайСтр.Количество() = 0 Тогда
			Нов = Объект.НенайденныеШтрихкоды.Добавить();
		Иначе
			Нов = НайСтр[0];
		КонецеСли;
		Нов.КоличествоМест = Нов.КоличествоМест + 1;
		Нов.Штрихкод = Штрихкод;
		Элементы.шк.ЦветФона = WebЦвета.КрасноФиолетовый;
		Сигнал();
	КонецеСли;
	ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры	

&НаСервере
Процедура ВидимостьРеквизитовФормы()
	Элементы.СлужбаДоставки.Видимость = Ложь;
	Элементы.ИнтернетМагазин.Видимость = Ложь;
	Элементы.ГруппаЗабор.Видимость = Ложь;
	Элементы.НомерРеестра.Видимость = Ложь;
	Если Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходЗаказовОтИнтернетМагазина Тогда
		Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
			Элементы.ИнтернетМагазин.Видимость = Истина;
			Элементы.НомерРеестра.Видимость = Ложь;
			Элементы.ГруппаЗабор.Видимость = Ложь;
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору Тогда
			Элементы.ГруппаЗабор.Видимость = Истина;
			Элементы.ИнтернетМагазин.Видимость = Ложь;
			Элементы.НомерРеестра.Видимость = истина;		
			Элементы.ШК_ИМ.Видимость = истина;
			Элементы.ОчисткаШКИМ.Видимость = истина;
		Иначе
			Элементы.ИнтернетМагазин.Видимость = Ложь;
			Элементы.НомерРеестра.Видимость = Истина;
			Элементы.ГруппаЗабор.Видимость = Ложь;
		КонецЕсли;	
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВТранспортнуюКомпанию Тогда
		Элементы.СлужбаДоставки.Видимость = Истина;
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходВозвратныхЗаказов Тогда
		Элементы.СлужбаДоставки.Видимость = Истина;
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВИнтернетМагазин Тогда
		Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
			Элементы.ИнтернетМагазин.Видимость = Истина;
			Элементы.НомерРеестра.Видимость = Ложь;
		Иначе
			Элементы.ИнтернетМагазин.Видимость = Ложь;
			Элементы.НомерРеестра.Видимость = Истина;			
		КонецЕсли;	
	КонецеСли;	
КонецПроцедуры	

&НаКлиенте
Процедура ТипСбораДанныхПриИзменении(Элемент)
	ТипСбораДанныхПриИзмененииНаСервере();
	//ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры

&НаСервере
Процедура ТипСбораДанныхПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	ВидимостьРеквизитовФормы();
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Объект.ТипСбораДанных.Пустая() Тогда
		Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходЗаказовОтИнтернетМагазина;
		Объект.ЗагружатьБезПроверки = Константы.ЗагружатьДокументыВЦББезПроверки.Получить();
		Объект.РежимПолученияДанных = Константы.РежимПолученияОжидаемыхЗаказов.Получить();
		Объект.УдаленнаяПриемка = Истина;
	КонецеСли;	
	ВидимостьРеквизитовФормы();
КонецПроцедуры

&НаСервере
Процедура ВвестиШтрихкодНаСервере()
	// Вставить содержимое обработчика.
	//СчитатьШтрихкод(ШК);
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихкод(Команда)
	//ВвестиШтрихкодНаСервере();
	СчитатьШтрихкод(ШК);
	ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьПолеШК()
    ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПодключитьОбработчикОжидания("АктивироватьПолеШК", 1);
	ОбновитьНадписи();
	
	//#Если МобильноеПриложениеКлиент  Тогда
	//	Если НЕ СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
	//		Сообщить("Сканирование штрихкодов не поддерживается");
	//		Элементы.СканироватьРеестр.Доступность = Ложь;
	//	Иначе	
	//		Элементы.СканироватьРеестр.Доступность = Ложь;
	//	КонецЕсли;
	//#КонецЕсли   	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиБДНаСервере()
	Если Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходЗаказовОтИнтернетМагазина Или Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВИнтернетМагазин Тогда
		Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
			Если Объект.ИнтернетМагазин.Пустая() Тогда
				Сообщить("Укажите интернет-магазин!");
				Возврат;
			КонецеСли;	
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоРеестру Тогда
			Если Не ЗначениеЗаполнено(Объект.НомерРеестра) Тогда
				Сообщить("Укажите номер реестра!");
				Возврат;
			КонецеСли;	
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору Тогда
			Если Не ЗначениеЗаполнено(Объект.НомерЗабораСЦ) И Не ЗначениеЗаполнено(Объект.НомерРеестра) Тогда
				Сообщить("Укажите номер забора СЦ или номер реестра (сканируйте отправление)!");
				Возврат;
			КонецеСли;				
		КонецеСли;
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходВозвратныхЗаказов Или Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВТранспортнуюКомпанию Тогда
		Если Объект.СлужбаДоставки.Пустая() Тогда
			Сообщить("Укажите службу доставки!");
			Возврат;
		КонецеСли;	
	КонецеСли;	
	
	Объект.ДокументЗаполнен = Ложь;
	
	// Вставить содержимое обработчика.
	//ОбменДаннымиССервисом.ВыполнитьОбмен();		
	
	Если Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходЗаказовОтИнтернетМагазина Тогда
		
		Если ЗначениеЗаполнено(Объект.НомерЗабораСЦ) и Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору Тогда
			
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору и ЗначениеЗаполнено(Объект.НомерРеестра) Тогда
			Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоРеестру;
		КонецеСли;	
		
		Объект.СтатусДляЗаполнения = Справочники.СтатусыОтправлений.ЗаказСозданКорректно;
		Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
			Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусу2(101,,СокрЛП(Объект.ИнтернетМагазин.Код));
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоРеестру Тогда
			Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусуИРеестру(101,СокрЛП(Объект.НомерРеестра));
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору Тогда
			Если Не Объект.УдаленнаяПриемка Тогда
				Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусуИНомеруЗабораСЦ(101,Объект.НомерЗабораСЦ);			
			Иначе
				Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусуИНомеруЗабораСЦСУдаленнойПриемкой(101,Объект.НомерЗабораСЦ);			
			КонецеСли;	
		КонецеСли;	
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ПриходВозвратныхЗаказов Тогда
		Объект.СтатусДляЗаполнения = Справочники.СтатусыОтправлений.СЦПолученыДанныеОПланируемомВозврате;
		Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусу(160,СокрЛП(Объект.СлужбаДоставки.Код));
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВТранспортнуюКомпанию Тогда
		Объект.СтатусДляЗаполнения = Справочники.СтатусыОтправлений.ЗаказНаСкладеСЦПодготовленКОтправкеВСД;
		Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусу(120,СокрЛП(Объект.СлужбаДоставки.Код));
	ИначеЕсли Объект.ТипСбораДанных = Перечисления.ТипСбораДанных.ОтгрузкаЗаказовВИнтернетМагазин Тогда
		Объект.СтатусДляЗаполнения = Справочники.СтатусыОтправлений.ВозвратныйЗаказНаСкладеСЦ;
		Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
			Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусу(170,,СокрЛП(Объект.ИнтернетМагазин.Код));
		ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоРеестру Тогда
			Таб = ОбменДаннымиССервисом.ПолучитьЗаказыПоСтатусуИРееструНаВозврат(170,СокрЛП(Объект.НомерРеестра));
		КонецеСли;	
	КонецеСли;	
	
	Для Каждого Тек Из Таб Цикл
		Нов = Объект.Штрихкоды.Добавить();
		ЗаполнитьЗначенияСвойств(Нов, Тек);
	КонецЦикла;	
	Объект.ДокументЗаполнен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиБД(Команда)
	Если Объект.ТипСбораДанных.Пустая() Тогда
		Сообщить("Укажите тип документа!");
		Возврат;
	КонецеСли;	
	
		
	Если Объект.Штрихкоды.Количество() <> 0 Тогда
		От = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьДаннымиБДЗавершение", ЭтотОбъект), "Табличная часть не пуста. При заполнении она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
        Возврат;	
	КонецеСли;		
	ЗаполнитьДаннымиБДФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиБДЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	От = РезультатВопроса;
	Если От = КодВозвратаДиалога.Да Тогда
		Объект.Штрихкоды.Очистить();
	Иначе
		Возврат;
	КонецеСли;	
	
	ЗаполнитьДаннымиБДФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиБДФрагмент()
	
	ЗаполнитьДаннымиБДНаСервере();
	ТекущийЭлемент = Элементы.ШК;
	ОбновитьНадписи();
КонецПроцедуры


&НаКлиенте
Процедура ИнтернетМагазинПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	//ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры


&НаКлиенте
Процедура СлужбаДоставкиПриИзменении(Элемент)
	//ТекущийЭлемент = Элементы.ШК;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписи()
	ИтКол = 0;
	ИтКолВ = 0;
	Для Каждого Тек Из Объект.Штрихкоды Цикл
		Если Тек.ВНаличии Тогда
			ИтКол = ИтКол + 1;
		КонецеСли;	
		Если Тек.Вычерк Тогда
			ИтКолВ = ИтКолВ + 1;
		КонецеСли;	
	КонецЦикла;	
	
	КоличествоКСканированию = Объект.Штрихкоды.Количество();
	КоличествоОтсканировано = ИтКол;
	КоличествоОтсканированоНеопознано = Объект.НенайденныеШтрихкоды.Количество();
	КоличествоВычерк = ИтКолВ;
КонецПроцедуры	


&НаКлиенте
Процедура ШтрихкодыВНаличииПриИзменении(Элемент)
	Если Элементы.Штрихкоды.ТекущиеДанные.ВНаличии Тогда	
		Элементы.Штрихкоды.ТекущиеДанные.Вычерк = Ложь;
	КонецеСли;		
	ОбновитьНадписи();
КонецПроцедуры


&НаКлиенте
Процедура НенайденныеШтрихкодыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ШтрихкодыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Функция РежимОжидания()
	Если Объект.РежимПолученияДанных.Пустая() Или Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоМагазину Тогда
		Возврат 1;
	ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоРеестру Тогда
		Возврат 2;
	ИначеЕсли Объект.РежимПолученияДанных = Перечисления.РежимПолученияОжидаемыхЗаказов.ПоЗабору Тогда
		Возврат 3;		
	КонецеСли;	
КонецФункции	

&НаКлиенте
Процедура ШК_ИМАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Найти(текст,Символы.ПС)>0 И СокрЛП(Текст) <> "" Тогда
		Реж = РежимОжидания();
		Если Реж = 1 Тогда
			Объект.ИнтернетМагазин = ПолучитьИнтернетМагазинПоЗаказу(СтрЗаменить(Текст, Символы.ПС, ""));
		ИначеЕсли Реж = 2 или Реж = 3 Тогда
			Объект.НомерРеестра = ПолучитьНомерРеестраПоЗаказу(СтрЗаменить(Текст, Символы.ПС, ""));
		КонецеСли;	
	КонецЕсли;	
	ШК_ИМ = "";
КонецПроцедуры

&НаСервере
Функция ПолучитьИнтернетМагазинПоЗаказу(ШК)
	Возврат ОбменДаннымиССервисом.ПолучитьМагазинПоЗаказу(ШК);
КонецФункции	

&НаСервере
Функция ПолучитьНомерРеестраПоЗаказу(ШК)
	Возврат ОбменДаннымиССервисом.ПолучитьРеестрПоЗаказу(ШК);
КонецФункции	


&НаКлиенте
Процедура ПоказатьНеСканированныеЗаказы(Команда)
	Если Не Элементы.ШтрихкодыПоказатьНеСканированныеЗаказы.Пометка Тогда
		Отб = Новый ФиксированнаяСтруктура("ВНаличии", Ложь);
		Элементы.Штрихкоды.ОтборСтрок = Отб;
		элементы.ШтрихкодыПоказатьНеСканированныеЗаказы.Пометка = Истина;
	Иначе
		Элементы.Штрихкоды.ОтборСтрок = Неопределено;
		элементы.ШтрихкодыПоказатьНеСканированныеЗаказы.Пометка = Ложь;
	КонецеСли;	
КонецПроцедуры


&НаКлиенте
Процедура ОчисткаШК(Команда)
	ШК = "";
	Элементы.шк.ЦветФона = WebЦвета.СинийСПороховымОттенком;
КонецПроцедуры


&НаКлиенте
Процедура ОчисткаШКИМ(Команда)
	ШК_ИМ = "";
КонецПроцедуры


&НаКлиенте
Процедура ШтрихкодыВычеркПриИзменении(Элемент)
	Если Элементы.Штрихкоды.ТекущиеДанные.Вычерк Тогда
		Элементы.Штрихкоды.ТекущиеДанные.ВНаличии = Ложь;
	КонецеСли;
	ОбновитьНадписи();
КонецПроцедуры


&НаКлиенте
Процедура НомерЗабораСЦПриИзменении(Элемент)
	НомерЗабораСЦПриИзмененииНаСервере();
КонецПроцедуры


&НаСервере
Процедура НомерЗабораСЦПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура СканироватьРеестр(Команда)
	#Если МобильноеПриложениеКлиент  Тогда
		
		ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаСканирования", ЭтаФорма);
		
		ОбработчикЗакрытия = Новый ОписаниеОповещения("ОбработкаЗакрытияИнтерфейса", ЭтаФорма);
		
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Наведите камеру на штрихкод", ОбработчикСканирования, ОбработчикЗакрытия, ТипШтрихКода.Линейный);
		
	#КонецЕсли
КонецПроцедуры

&НаКлиенте

Процедура ОбработкаСканирования(Штрихкод, Результат, Сообщение, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		Ошибка = Ложь;
		//ЕстьОшибкаВвода(Штрихкод);
		Если Ошибка <> ЛОЖЬ Тогда
			Сообщение = "Ошибка штрих кода";
		Иначе
			//ОбработатьШтрихКод(Штрихкод);
			//Сообщение = ТекущаяОперация;
			Объект.НомерЗабораСЦ = Штрихкод;
		КонецЕсли;
	Иначе
		Сообщение = "Ошибка обработки штрих кода";  
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте

Процедура ОбработкаЗакрытияИнтерфейса(ДополнительныеПараметры) Экспорт
	//
КонецПроцедуры

&НаКлиенте
Процедура ШК_ЗАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Если Найти(текст,Символы.ПС)>0 И СокрЛП(Текст) <> "" Тогда
		//Реж = РежимОжидания();
		//Если Реж = 1 Тогда
		//	Объект.ИнтернетМагазин = ПолучитьИнтернетМагазинПоЗаказу(СтрЗаменить(Текст, Символы.ПС, ""));
		//ИначеЕсли Реж = 2 или Реж = 3 Тогда
			Объект.НомерЗабораСЦ = СтрЗаменить(Текст, Символы.ПС, "");
		//КонецеСли;	
	КонецЕсли;	
	ШК_З = "";
КонецПроцедуры
